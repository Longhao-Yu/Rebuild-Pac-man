using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;

public class LevelGenerator : MonoBehaviour
{
    public int[,] tileMap = new int[,]
    {
      {1,2,2,2,2,2,2,2,2,2,2,2,2,71,7,2,2,2,2,2,2,2,2,2,2,2,2,11},
      {21,5,5,5,5,5,5,5,5,5,5,5,5,41,41,5,5,5,5,5,5,5,5,5,5,5,5,21},
      {21,5,3,4,4,31,5,3,4,4,4,31,5,41,41,5,3,4,4,4,31,5,3,4,4,31,5,21},
      {21,6,41,0,0,41,5,41,0,0,0,41,5,41,41,5,41,0,0,0,41,5,41,0,0,41,6,21},
      {21,5,33,4,4,32,5,33,4,4,4,32,5,33,32,5,33,4,4,4,32,5,33,4,4,32,5,21},
      {21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,21},
      {21,5,3,4,4,31,5,3,31,5,3,4,4,4,4,4,4,31,5,3,31,5,3,4,4,31,5,21},
      {21,5,33,4,4,32,5,41,41,5,33,4,4,31,3,4,4,32,5,41,41,5,33,4,4,32,5,21},
      {21,5,5,5,5,5,5,41,41,5,5,5,5,41,41,5,5,5,5,41,41,5,5,5,5,5,5,21},
      {13,2,2,2,2,11,5,41,33,4,4,31,0,41,41,0,3,4,4,32,41,5,1,2,2,2,2,12},
      {0,0,0,0,0,21,5,41,3,4,4,32,0,33,32,0,33,4,4,31,41,5,21,0,0,0,0,0},
      {0,0,0,0,0,21,5,41,41,0,0,0,0,0,0,0,0,0,0,41,41,5,21,0,0,0,0,0},
      {0,0,0,0,0,21,5,41,41,0,3,4,4,0,0,4,4,31,0,41,41,5,21,0,0,0,0,0},
      {2,2,2,2,2,12,5,33,32,0,41,0,0,0,0,0,0,41,0,33,32,5,13,2,2,2,2,2},
      {0,0,0,0,0,0,5,0,0,0,41,0,0,0,0,0,0,41,0,0,0,5,0,0,0,0,0,0},
      {2,2,2,2,2,11,5,3,31,0,41,0,0,0,0,0,0,41,0,3,31,5,1,2,2,2,2,2},
      {0,0,0,0,0,21,5,41,41,0,33,4,4,4,4,4,4,32,0,41,41,5,21,0,0,0,0,0},
      {0,0,0,0,0,21,5,41,41,0,0,0,0,0,0,0,0,0,0,41,41,5,21,0,0,0,0,0},
      {0,0,0,0,0,21,5,41,33,4,4,31,0,3,31,0,3,4,4,32,41,5,21,0,0,0,0,0},
      {1,2,2,2,2,12,5,41,3,4,4,32,0,41,41,0,33,4,4,31,41,5,13,2,2,2,2,11},
      {21,5,5,5,5,5,5,41,41,5,5,5,5,41,41,5,5,5,5,41,41,5,5,5,5,5,5,21},
      {21,5,3,4,4,31,5,41,41,5,3,4,4,32,33,4,4,31,5,41,41,5,3,4,4,31,5,21},
      {21,5,33,4,4,32,5,33,32,5,33,4,4,4,4,4,4,32,5,33,32,5,33,4,4,32,5,21},
      {21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,21},
      {21,5,3,4,4,31,5,3,4,4,4,31,5,3,31,5,3,4,4,4,31,5,3,4,4,31,5,21},
      {21,6,41,0,0,41,5,41,0,0,0,41,5,41,41,5,41,0,0,0,41,5,41,0,0,41,6,21},
      {21,5,33,4,4,32,5,33,4,4,4,32,5,41,41,5,33,4,4,4,32,5,33,4,4,32,5,21},
      {21,5,5,5,5,5,5,5,5,5,5,5,5,41,41,5,5,5,5,5,5,5,5,5,5,5,5,21},
      {13,2,2,2,2,2,2,2,2,2,2,2,2,72,73,2,2,2,2,2,2,2,2,2,2,2,2,12},
    };

    public float TileSize;
    public Vector2 StartPoint;//top left corner of the map

        // Start is called before the first frame update
    void Start()
    {

    }

    private void Awake()
    {
        TileSize = 1;
        StartPoint = new Vector2(2, 30);
        PopulateTileMap();
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    public void PopulateTileMap()
    {
        for (int i = 0; i < 29; i++)
        {
            for (int j = 0; j < 28; j++)
            {

                GameObject prefab = Resources.Load(tileMap[i, j].ToString()) as GameObject;
                GameObject tile = Instantiate(prefab, Vector3.zero, Quaternion.identity) as GameObject;
                //tile.transform.position = new Vector3(StartPoint.x + (TileSize * i) + (TileSize / 2), StartPoint.y + (TileSize * j) + (TileSize / 2), 0);
                tile.transform.position = new Vector3(StartPoint.x + (TileSize * j * 4), StartPoint.y - (TileSize * i * 4), 0);

                //Debug.Log("x= " + (StartPoint.x + (TileSize * j * 2)) + " " + "y = " + (StartPoint.y - (TileSize * i * 2)));
                //Debug.Log(prefab);
            }
        }
    }
}
